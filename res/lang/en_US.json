{
	"patch.dialogue.start": "Start patch the dialogues data",
    "patch.dialogue.pass.no_gm_data": "{} => Pass (no game data)",
	"patch.dialogue.failed.read": "{} => Read failed",
	"patch.dialogue.failed.write": "{} => Write failed",
	"patch.dialogue.ok": "{} -> {} / {} => OK"
	"patch.dialogue.result": "Total: {} | OK: {} | Failed: {} | Passed: {}",
	"migration.dialogue.start": "Start migration the dialogues data",
	"migration.dialogue.failed.read": "{} => Read failed",
	"migration.dialogue.failed.write": "{} => Write failed",
	"migration.dialogue.pass.no_gm_data": "{} => OK (no game data)",
	"migration.dialogue.ok": "{} -> {} / {} => OK",
	"migration.dialogue.result": "Total: {} | OK: {} | Failed: {} | Passed: {}",
	"migration.dialogue.extract": "Start generate the dialogues migration data",
	"extract.dialogue.start": "Start extract the dialogues data",
	"extract.dialogue.pass.no_gm_data": "{} => Pass (no data)",
	"extract.dialogue.failed.read": "{} => Read failed",
	"extract.dialogue.failed.write": "{} => Write failed",
	"extract.dialogue.ok": "{} -> {} => OK"
	"extract.dialogue.result": "Total: {} | OK: {} | Failed: {} | Passed: {}",
	
	"patch.choice.start": "Start patch the choices data",
    "patch.choice.pass.no_gm_data": "{} => Pass (no game data)",
	"patch.choice.failed.read": "{} => Read failed",
	"patch.choice.failed.write": "{} => Write failed",
	"patch.choice.ok": "{} -> {} / {} => OK"
	"patch.choice.result": "Total: {} | OK: {} | Failed: {} | Passed: {}",
	"migration.choice.start": "Start migration the choices data",
	"migration.choice.failed.read": "{} => Read failed",
	"migration.choice.failed.write": "{} => Write failed",
	"migration.choice.pass.no_gm_data": "{} => OK (no game data)",
	"migration.choice.ok": "{} -> {} / {} => OK",
	"migration.choice.result": "Total: {} | OK: {} | Failed: {} | Passed: {}",
	"migration.choice.extract": "Start generate the choices migration data",
	"extract.choice.start": "Start extract the choices data",
	"extract.choice.pass.no_gm_data": "{} => Pass (no data)",
	"extract.choice.failed.read": "{} => Read failed",
	"extract.choice.failed.write": "{} => Write failed",
	"extract.choice.ok": "{} -> {} => OK"
	"extract.choice.result": "Total: {} | OK: {} | Failed: {} | Passed: {}",
	
	"patch.copy.start": "Start patch the copy data",
	"patch.copy.failed.read": "Can't read the copy.json file",
	"patch.copy.failed.empty": "Empty src({}) or dst({}) => failed",
	"patch.copy.failed.exception": "error occurpted while copy {} to {}: {}",
	"patch.copy.ok.file", "[Directory] {} -> {} => OK",
	"patch.copy.ok.directory": "[FILE] {} -> {} => OK",
	"patch.copy.result": "Total: {} | OK: {} | Failed: {} | Passed: {}",
	
	"extract.copy.start": "",
	"extract.copy.failed.write": "",
	"extract.copy.result": "Total: {} | OK: {} | Failed: {} | Passed: {}",
	
	"patch.ui_dialogue.start": "Start patch the ui-dialogue data",
	"patch.ui_dialogue.failed.read": "{} => Read failed",
	"migration.ui_dialogue.failed.write": "",
	"migration.ui_dialogue.pass.no_gm_data": "",
	"patch.ui_dialogue.ok": "{} -> {} / {} => OK",
	"patch.ui_dialogue.result": "Total: {} | OK: {} | Failed: {} | Passed: {}",
	"migration.ui_dialogue.extract", "",
	
	"patch.ui_font.start": "Start patch the ui-font data",
	"patch.ui_font.failed.read": "Can't read the fonts.json",
	"patch.ui_font.failed.write": "",
	"patch.ui_font.ok": "",
	"patch.ui_font.result": "",
}
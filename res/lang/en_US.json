{
	"wv.binder.init.start": "Initializing patcher...",
	"wv.binder.init.success": "Patcher initialized",
	"wv.binder.dialog.failed": "An error occurred while retrieving the path",
	"wv.binder.dialog.gmdir.notice": "Please select the folder containing the game executable (.exe) file",
	"wv.binder.gmdir.auto.failed.find_steam": "Can't find steam",
	"wv.binder.gmdir.auto.failed.find_game_from_steam": "Can't find installed game in steam",
	"wv.binder.gmdir.auto.failed.game_not_installed": "Game doesn't installed",
	"wv.binder.gmdir.auto.failed.find_game_name": "Can't find installed game name",
	"wv.binder.gmdir.auto.failed.game_dir_not_exists": "Game directory doesn't exists.",
	"wv.binder.gmdir.auto.ok.steam_dir": "Found steam directory: {}",
	"wv.binder.gmdir.auto.ok.game_installed": "Checked game installed",
	"wv.binder.gmdir.auto.ok.game_name": "Checked game folder name",
	"wv.binder.gmdir.auto.ok.game_directory": "Found game directory",
	"wv.binder.extract.result": "You can find extracted data into: {}",

	"wv.invoker.set.game_directory": "Game directory set: {}",

	"patch.dialogue.start": "Start patch the dialogues data",
	"patch.dialogue.pass.no_gm_data": "{} => Pass (no game data)",
	"patch.dialogue.failed.read": "{} => Read failed",
	"patch.dialogue.failed.write": "{} => Write failed",
	"patch.dialogue.ok": "{} -> {} / {} => OK",
	"patch.dialogue.result": "Total: {} | OK: {} | Failed: {} | Passed: {}",

	"migration.dialogue.start": "Start migration the dialogues data",
	"migration.dialogue.failed.read": "{} => Read failed",
	"migration.dialogue.failed.write": "{} => Write failed",
	"migration.dialogue.pass.no_gm_data": "{} => OK (no game data)",
	"migration.dialogue.ok": "{} -> {} / {} => OK",
	"migration.dialogue.result": "Total: {} | OK: {} | Failed: {} | Passed: {}",
	"migration.dialogue.extract": "Start generate the dialogues migration data",

	"extract.dialogue.start": "Start extract the dialogues data",
	"extract.dialogue.failed.read": "{} => Read failed",
	"extract.dialogue.failed.write": "{} => Write failed",
	"extract.dialogue.pass.no_gm_data": "{} => Pass (no data)",
	"extract.dialogue.ok": "{} -> {} => OK",
	"extract.dialogue.result": "Total: {} | OK: {} | Failed: {} | Passed: {}",
	
	"patch.choice.start": "Start patch the choices data",
	"patch.choice.failed.read": "{} => Read failed",
	"patch.choice.failed.write": "{} => Write failed",
	"patch.choice.pass.no_gm_data": "{} => Pass (no game data)",
	"patch.choice.ok": "{} -> {} / {} => OK",
	"patch.choice.result": "Total: {} | OK: {} | Failed: {} | Passed: {}",

	"migration.choice.start": "Start migration the choices data",
	"migration.choice.failed.read": "{} => Read failed",
	"migration.choice.failed.write": "{} => Write failed",
	"migration.choice.pass.no_gm_data": "{} => OK (no game data)",
	"migration.choice.ok": "{} -> {} / {} => OK",
	"migration.choice.result": "Total: {} | OK: {} | Failed: {} | Passed: {}",
	"migration.choice.extract": "Start generate the choices migration data",

	"extract.choice.start": "Start extract the choices data",
	"extract.choice.failed.read": "{} => Read failed",
	"extract.choice.failed.write": "{} => Write failed",
	"extract.choice.pass.no_gm_data": "{} => Pass (no data)",
	"extract.choice.ok": "{} -> {} => OK",
	"extract.choice.result": "Total: {} | OK: {} | Failed: {} | Passed: {}",
	
	"patch.copy.start": "Start patch the copy data",
	"patch.copy.failed.read": "Can't read the copy.json file",
	"patch.copy.failed.empty": "Empty src({}) or dst({}) => failed",
	"patch.copy.failed.exception": "error occurpted while copy {} to {}: {}",
	"patch.copy.ok.file": "[Directory] {} -> {} => OK",
	"patch.copy.ok.directory": "[FILE] {} -> {} => OK",
	"patch.copy.result": "Total: {} | OK: {} | Failed: {} | Passed: {}",
	
	"extract.copy.start": "Start extract the copy data",
	"extract.copy.failed.write": "Can't write the copy.json file",
	"extract.copy.result": "Total: {} | OK: {} | Failed: {} | Passed: {}",
	
	"patch.ui.failed.copy": "Can't copied the game file from game directory",
	"patch.ui.failed.copy.game": "Can't copied the patched game file to game directory",
	"patch.ui.failed.read": "Can't read the copied game file",
	"patch.ui.failed.write": "Can't save the patched game file",

	"patch.ui_dialogue.start": "Start patch the ui-dialogue data",
	"patch.ui_dialogue.failed.read": "{} => Read failed",
	"patch.ui_dialogue.ok": "{} -> {} / {} => OK",
	"patch.ui_dialogue.result": "Total: {} | OK: {} | Failed: {} | Passed: {}",

	"migration.ui_dialogue.start": "Start migration the ui-dialogues data",
	"migration.ui_dialogue.failed.read": "{} => Read failed",
	"migration.ui_dialogue.failed.write": "{} => Write failed",
	"migration.ui_dialogue.pass.no_gm_data": "{} => OK (no game data)",
	"migration.ui_dialogue.ok": "{} -> {} / {} => OK",
	"migration.ui_dialogue.result": "Total: {} | OK: {} | Failed: {} | Passed: {}",
	"migration.ui_dialogue.extract": "Start generate the dialogues migration data",
	
	"extract.ui_dialogue.start": "Start extract the ui-dialogues data",
	"extract.ui_dialogue.failed.read": "{} => Read failed",
	"extract.ui_dialogue.failed.write": "{} => Write failed",
	"extract.ui_dialogue.pass.no_gm_data": "{} => Pass (no data)",
	"extract.ui_dialogue.ok": "{} -> {} => OK",
	"extract.ui_dialogue.result": "Total: {} | OK: {} | Failed: {} | Passed: {}",
	
	"patch.ui_choice.start": "Start patch the ui-choices data",
	"patch.ui_choice.failed.read": "{} => Read failed",
	"patch.ui_choice.ok": "{} -> {} / {} => OK",
	"patch.ui_choice.result": "Total: {} | OK: {} | Failed: {} | Passed: {}",
	
	"migration.ui_choice.start": "Start patch the ui-choices data",
	"migration.ui_choice.failed.read": "{} => Read failed",
	"migration.ui_choice.failed.write": "{} => Write failed",
	"migration.ui_choice.pass.no_gm_data": "{} => Pass (no game data)",
	"migration.ui_choice.ok": "{} -> {} / {} => OK",
	"migration.ui_choice.result": "Total: {} | OK: {} | Failed: {} | Passed: {}",
	"migration.ui_choice.extract": "Start generate the ui-dialogues migration data",
	
	"extract.ui_choice.start": "Start extract the ui-choices data",
	"extract.ui_choice.failed.read": "{} => Read failed",
	"extract.ui_choice.failed.write": "{} => Write failed",
	"extract.ui_choice.pass.no_gm_data": "{} => Pass (no data)",
	"extract.ui_choice.ok": "{} -> {} => OK",
	"extract.ui_choice.result": "Total: {} | OK: {} | Failed: {} | Passed: {}",
	
	"patch.ui_font.start": "Start patch the ui-font data",
	"patch.ui_font.failed.read": "Can't read the fonts.json",
	"patch.ui_font.result": "Total: {} | OK: {} | Failed: {} | Passed: {}",

	"migration.ui_font.start": "Start migration the ui-font data",
	"migration.ui_font.failed.read": "Can't read the game data",
	"migration.ui_font.failed.write": "Can't write the fonts.json",
	"migration.ui_font.result": "Total: {} | OK: {} | Failed: {} | Passed: {}",
	
	"extract.ui_font.start": "Start extract the ui-font data",
	"extract.ui_text.failed.read": "Can't read the game data",
	"extract.ui_font.failed.write": "Can't write the fonts.json",
	"extract.ui_font.result": "Total: {} | OK: {} | Failed: {} | Passed: {}",
	
	"patch.ui_text_in_game.start": "Start patch the ui-text-ingame data",
	"patch.ui_text_in_game.failed": "{} => Failed",
	"patch.ui_text_in_game.ok": "{} => OK",
	"patch.ui_text_in_game.result": "Total: {} | OK: {} | Failed: {} | Passed: {}",
	
	"extract.ui_text_in_game.start": "Start extract the ui-text-ingame data",
	"extract.ui_text_in_game.failed": "{} = > Failed",
	"extract.ui_text_in_game.failed.write": "Can't write the file",
	"extract.ui_text_in_game.ok": "{} => OK",
	"extract.ui_text_in_game.result": "Total: {} | OK: {} | Failed: {} | Passed: {}",
	
	"patch.ui_text_setting.start": "Start patch the ui-text-setting data",
	"patch.ui_text_setting.failed": "{} => Failed",
	"patch.ui_text_setting.ok": "{} => OK",
	"patch.ui_text_setting.result": "Total: {} | OK: {} | Failed: {} | Passed: {}",
	
	"extract.ui_text_setting.start": "Start extract the ui-text-setting data",
	"extract.ui_text_setting.failed": "{} => Failed",
	"extract.ui_text_setting.failed.write": "Can't write the file",
	"extract.ui_text_setting.ok": "{} => OK",
	"extract.ui_text_setting.result": "Total: {} | OK: {} | Failed: {} | Passed: {}",
	
	"patch.ui_text_dialog.start": "Start patch the ui-text-dialog data",
	"patch.ui_text_dialog.failed": "{} => Failed",
	"patch.ui_text_dialog.ok": "{} => OK",
	"patch.ui_text_dialog.result": "Total: {} | OK: {} | Failed: {} | Passed: {}",
	
	"extract.ui_text_dialog.start": "Start extract the ui-text-dialog data",
	"extract.ui_text_dialog.failed": "{} => Failed",
	"extract.ui_text_dialog.failed.write": "Can't write the file",
	"extract.ui_text_dialog.ok": "{} => OK",
	"extract.ui_text_dialog.result": "Total: {} | OK: {} | Failed: {} | Passed: {}",
	
	"patch.ui_text_title.start": "Start patch the ui-text-title data",
	"patch.ui_text_title.failed": "{} => Failed",
	"patch.ui_text_title.ok": "{} => OK",
	"patch.ui_text_title.result": "Total: {} | OK: {} | Failed: {} | Passed: {}",
	
	"extract.ui_text_title.start": "Start extract the ui-text-title data",
	"extract.ui_text_title.failed": "{} => Failed",
	"extract.ui_text_title.failed.write": "Can't write the file",
	"extract.ui_text_title.ok": "{} => OK",
	"extract.ui_text_title.result": "Total: {} | OK: {} | Failed: {} | Passed: {}"
}